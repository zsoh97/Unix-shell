/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 20 17:04:42 GMT 2021
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.nio.file.InvalidPathException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.Environment;
import sg.edu.nus.comp.cs4218.impl.app.CdApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CdApplication_ESTest extends CdApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      try { 
        cdApplication0.getNormalizedAbsolutePath("F&c");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      Environment.setCurrentDirectory("");
      String string0 = cdApplication0.getNormalizedAbsolutePath("..");
      assertEquals("..", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      cdApplication0.changeToDirectory("..");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = " u|TOq*20";
      // Undeclared exception!
      try { 
        cdApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      // Undeclared exception!
      try { 
        cdApplication0.getNormalizedAbsolutePath("OR)'j<Z~h3R%u$Gd.1_");
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      // Undeclared exception!
      try { 
        cdApplication0.changeToDirectory("C:UsersDesktopCS4218 Projectcs4218-project-ay2021-s2-2021-team22");
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      try { 
        cdApplication0.getNormalizedAbsolutePath((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: Insufficient arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      try { 
        cdApplication0.changeToDirectory(".X");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment.setCurrentDirectory("}");
      CdApplication cdApplication0 = new CdApplication();
      try { 
        cdApplication0.getNormalizedAbsolutePath("}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      try { 
        cdApplication0.getNormalizedAbsolutePath("}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      Environment.setCurrentDirectory("Too many arguments");
      try { 
        cdApplication0.getNormalizedAbsolutePath("..");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      try { 
        cdApplication0.getNormalizedAbsolutePath("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: Insufficient arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      String[] stringArray0 = new String[18];
      try { 
        cdApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: Too many arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      String[] stringArray0 = new String[0];
      cdApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        cdApplication0.run((String[]) null, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cd: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.CdApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CdApplication cdApplication0 = new CdApplication();
      String string0 = cdApplication0.getNormalizedAbsolutePath("..");
      assertEquals("C:\\Users\\\\Desktop\\CS4218 Project", string0);
  }
}
