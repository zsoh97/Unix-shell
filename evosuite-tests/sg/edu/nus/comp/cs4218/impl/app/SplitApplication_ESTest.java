/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 20 17:15:03 GMT 2021
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;
import sg.edu.nus.comp.cs4218.impl.app.SplitApplication;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SplitApplication_ESTest extends SplitApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      try { 
        splitApplication0.splitFileByBytes("", "sg.edu.nus.comp.cs4218.exception.SplitException", ",?");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: invalid number of bytes: ',?'
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      try { 
        splitApplication0.splitFileByLines("J~", (String) null, 120);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: J~: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String[] stringArray0 = new String[5];
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      try { 
        splitApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      PipedInputStream pipedInputStream0 = new PipedInputStream(618);
      String string0 = splitApplication0.readInput(pipedInputStream0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      try { 
        splitApplication0.splitFileByLines((String) null, "OutputStream not provided", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      // Undeclared exception!
      try { 
        splitApplication0.readInput((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1);
      String string0 = splitApplication0.readInput(byteArrayInputStream0);
      assertEquals("\u0000\r\n", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      try { 
        splitApplication0.splitStdinByBytes((InputStream) null, "user.home", "n=\"+cVhEd%#");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // InputStream not provided
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 737);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, 737);
      try { 
        splitApplication0.splitStdinByBytes(bufferedInputStream0, "of!7 xj}rP3^", "K21FMj_CQ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: invalid number of bytes: 'K21FMj_CQ'
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      try { 
        splitApplication0.splitStdinByLines((InputStream) null, "z7b>L", 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // InputStream not provided
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      try { 
        splitApplication0.splitFileByLines("", "invalid number of lines:", (-2047));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: : Is a directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1);
      splitApplication0.splitStdinByLines(byteArrayInputStream0, ">3uR+&+Pyg>Da5I", 10);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("invalid number of bytes:");
      try { 
        splitApplication0.run(stringArray0, mockFileInputStream0, mockFileOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: null
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)95, 1294);
      String[] stringArray0 = new String[0];
      try { 
        splitApplication0.run(stringArray0, byteArrayInputStream0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: OutputStream not provided
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SplitApplication splitApplication0 = new SplitApplication();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/+";
      stringArray0[1] = "0`cQMQ+9F_gF_Z3Qj]";
      stringArray0[2] = "option requires an argument";
      stringArray0[3] = "invalid number of bytes:";
      stringArray0[4] = "option requires an argument";
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      try { 
        splitApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // split: /+: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SplitApplication", e);
      }
  }
}
